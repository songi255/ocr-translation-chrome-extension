(()=>{"use strict";const e=new class{screenshot(e,t){const s=e.devicePixelRatio,a=Math.min(e.sx,e.ex)*s,n=Math.min(e.sy,e.ey)*s,o=Math.max(e.sx,e.ex)*s,r=Math.max(e.sy,e.ey)*s,c=o-a,i=r-n;if(0==c||0==i)throw new Error("capture region can't be zero size.");chrome.tabs.captureVisibleTab({format:"png"},(async e=>{const o=new OffscreenCanvas(c/s,i/s),r=o.getContext("2d");if(!r)throw new Error("can not make canvas context");const m=await fetch(e),u=await m.blob(),h=await createImageBitmap(u);r.drawImage(h,a,n,c,i,0,0,c/s,i/s);const l=await o.convertToBlob();t(l)}))}};async function t(e){const[t]=await chrome.tabs.query({active:!0,lastFocusedWindow:!0});await chrome.tabs.sendMessage(t.id,e)}let s;chrome.runtime.onInstalled.addListener((()=>{chrome.contextMenus.create({id:"ocr_translate_capture_menu",title:"start capture to ocr translation",contexts:["page"]})})),chrome.contextMenus.onClicked.addListener((()=>t({eventType:"start-capture",message:""}))),chrome.runtime.onMessage.addListener((async a=>{if("request-screenshot"===a.eventType){const t=a.message;e.screenshot(t,(e=>{const t=new FileReader;t.readAsDataURL(e),t.onloadend=async()=>{const e=t.result;await async function(e){const t=chrome.runtime.getURL(e);(await chrome.runtime.getContexts({contextTypes:["OFFSCREEN_DOCUMENT"],documentUrls:[t]})).length>0||(s||(s=chrome.offscreen.createDocument({url:e,reasons:[chrome.offscreen.Reason.BLOBS],justification:"tesseract uses URL.createObjectUrl() method"})),await s,s=null)}("offscreen.html"),chrome.runtime.sendMessage({eventType:"request-operation",message:e})}}))}"response-operation"===a.eventType&&t({eventType:"show-result",message:a.message})}))})();