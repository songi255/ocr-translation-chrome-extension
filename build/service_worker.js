(()=>{"use strict";const e=new class{screenshot(e,t){const a=e.devicePixelRatio,[n,s]=(o=e.startPoint,r=e.endPoint,[{x:Math.min(o.x,r.x),y:Math.min(o.y,r.y)},{x:Math.max(o.x,r.x),y:Math.max(o.y,r.y)}]);var o,r;const c=n.x*a,i=n.y*a,m=s.x*a,u=s.y*a,h=m-c,d=u-i;if(0==h||0==d)throw new Error("capture region can't be zero size.");chrome.tabs.captureVisibleTab({format:"png"},(async e=>{const n=new OffscreenCanvas(h/a,d/a),s=n.getContext("2d");if(!s)throw new Error("can not make canvas context");const o=await fetch(e),r=await o.blob(),m=await createImageBitmap(r);s.drawImage(m,c,i,h,d,0,0,h/a,d/a);const u=await n.convertToBlob();t(u)}))}};async function t(e){const[t]=await chrome.tabs.query({active:!0,lastFocusedWindow:!0});await chrome.tabs.sendMessage(t.id,e)}let a;chrome.runtime.onInstalled.addListener((()=>{chrome.contextMenus.create({id:"ocr_translate_capture_menu",title:"start capture to ocr translation",contexts:["page"]})})),chrome.contextMenus.onClicked.addListener((()=>t({eventType:"start-capture",message:""}))),chrome.runtime.onMessage.addListener((async n=>{if("request-screenshot"===n.eventType){const t=n.message;e.screenshot(t,(e=>{const t=new FileReader;t.readAsDataURL(e),t.onloadend=async()=>{const e=t.result;await async function(e){const t=chrome.runtime.getURL(e);(await chrome.runtime.getContexts({contextTypes:["OFFSCREEN_DOCUMENT"],documentUrls:[t]})).length>0||(a||(a=chrome.offscreen.createDocument({url:e,reasons:[chrome.offscreen.Reason.BLOBS],justification:"tesseract uses URL.createObjectUrl() method"})),await a,a=null)}("offscreen.html"),chrome.runtime.sendMessage({eventType:"request-operation",message:e})}}))}"response-operation"===n.eventType&&t({eventType:"show-result",message:n.message})}))})();