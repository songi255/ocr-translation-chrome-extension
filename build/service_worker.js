(()=>{"use strict";const e=new class{capture(e,t){const o=e.devicePixelRatio,s=Math.min(e.sx,e.ex)*o,n=Math.min(e.sy,e.ey)*o,a=Math.max(e.sx,e.ex)*o,c=Math.max(e.sy,e.ey)*o,r=a-s,i=c-n;chrome.tabs.captureVisibleTab({format:"png"},(e=>{const a=new OffscreenCanvas(r/o,i/o),c=a.getContext("2d");fetch(e).then((e=>e.blob())).then((e=>createImageBitmap(e))).then((e=>null==c?void 0:c.drawImage(e,s,n,r,i,0,0,r/o,i/o))).then((()=>a.convertToBlob())).then((e=>t(e)))}))}saveToFile(){}};let t,o=!1;chrome.runtime.onMessage.addListener(((s,n,a)=>(console.log("service worker recieved message from content.js"),console.log(s),"request-operation"===s.eventType?(e.capture(s.cropPos,(e=>{console.log(e);const s=new FileReader;s.readAsDataURL(e),s.onloadend=()=>{const e=s.result;(async function(e){o||(t||(t=chrome.offscreen.createDocument({url:"offscreen.html",reasons:[chrome.offscreen.Reason.BLOBS],justification:"tesseract uses URL.createObjectUrl() method"})),await t,o=!0)})().then((()=>{chrome.runtime.sendMessage({eventType:"request-ocr",base64:e},(t=>{a({base64:e,text:t.text})}))}))}})),!0):"response-ocr"===s.eventType?(console.log(s.text),!0):void 0)))})();