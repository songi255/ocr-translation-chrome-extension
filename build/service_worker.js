(()=>{"use strict";const e=new class{capture(e,t){const o=e.devicePixelRatio,a=Math.min(e.sx,e.ex)*o,s=Math.min(e.sy,e.ey)*o,n=Math.max(e.sx,e.ex)*o,r=Math.max(e.sy,e.ey)*o,c=n-a,i=r-s;if(0==c||0==i)throw new Error("capture region can't be zero size.");chrome.tabs.captureVisibleTab({format:"png"},(async e=>{const n=new OffscreenCanvas(c/o,i/o),r=n.getContext("2d");if(!r)throw new Error("can not make canvas context");const m=await fetch(e),l=await m.blob(),f=await createImageBitmap(l);r.drawImage(f,a,s,c,i,0,0,c/o,i/o);const h=await n.convertToBlob();t(h)}))}};let t,o=!1;chrome.runtime.onMessage.addListener(((a,s,n)=>(console.log("service worker recieved message from content.js"),console.log(a),"request-operation"===a.eventType?(e.capture(a.cropPos,(e=>{console.log(e);const a=new FileReader;a.readAsDataURL(e),a.onloadend=()=>{const e=a.result;(async function(e){o||(t||(t=chrome.offscreen.createDocument({url:"offscreen.html",reasons:[chrome.offscreen.Reason.BLOBS],justification:"tesseract uses URL.createObjectUrl() method"})),await t,o=!0)})().then((()=>{chrome.runtime.sendMessage({eventType:"request-ocr",base64:e},(t=>{n({base64:e,text:t.text})}))}))}})),!0):"response-ocr"===a.eventType?(console.log(a.text),!0):void 0)))})();